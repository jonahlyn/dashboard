---
# tasks file for mariadb

- name: Install dependencies
  apt: 
    name: "{{ packages }}"
    state: present
  vars:
    packages:
    - mariadb-server
    - mariadb-client
    - python-mysqldb

- name: Start mariadb service
  systemd: 
    name: mysql
    state: started
    enabled: yes

- name: Sets the MySQL root password 
  mysql_user: 
    user: root
    password: "{{ mysql_root_pass }}"
    host: localhost

- name: Create /root/.my.cnf (from template) with password credentials
  template: 
    src: templates/root.my.cnf.j2
    dest: /root/.my.cnf
    owner: root
    mode: 0600
  become: true

- name: Deletes anonymous MySQL server user for ansible_fqdn
  mysql_user: 
    user: ""
    host: "{{ ansible_fqdn }}"
    state: absent

- name: Deletes anonymous MySQL server user for localhost
  mysql_user: 
    user: ""
    state: absent

- name: Secures the MySQL root user for IPV6 localhost (::1)
  mysql_user: 
    user: "root" 
    password: "{{ mysql_root_pass }}"
    host: "::1"

- name: Secures the MySQL root user for IPV4 localhost (127.0.0.1)
  mysql_user: 
    user: "root" 
    password: "{{ mysql_root_pass }}" 
    host: "127.0.0.1"

- name: Secures the MySQL root user for localhost domain (localhost)
  mysql_user: 
    user: "root" 
    password: "{{ mysql_root_pass }}" 
    host: "localhost"

- name: Secures the MySQL root user for server_hostname domain
  mysql_user: 
    user: "root" 
    password: "{{ mysql_root_pass }}" 
    host: "{{ ansible_fqdn }}"

- name: Remove the mysql test database
  mysql_db: 
    name: test
    state: absent

- name: Create database
  mysql_db: 
    name: "{{ db_name }}"
    state: present

- name: Create database user
  mysql_user:
    name: "{{ db_user }}"
    password: "{{ db_pass }}"
    priv: "{{ db_name }}.*:ALL"
    host: localhost
    state: present

- name: Import data
  copy:
    src: files/{{ db_import }}
    dest: /tmp
  when: db_import is defined

- name: import sql
  mysql_db:
    state: import
    login_user: "root"
    login_password: "{{ mysql_root_pass }}"
    name: "{{ db_name }}"
    target: /tmp/{{ db_import }}
  when: db_import is defined